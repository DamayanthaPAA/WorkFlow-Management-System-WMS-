
@model WorkFlowMgtSystem.Models.User
@{
    ViewBag.Title = "Create User";
}


<div class="col-md-12">
    <!-- general form elements -->
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Edit User</h3>
            <div class="btn btn-info pl_add btn-small pull-right">
                @Html.ActionLink("View All Users", "ViewAllUsers", null, new { @style = "font-size: 12px;color:white;font-family: 'Lucida Sans Unicode', 'Lucida Grande', Sans-Serif;text-decoration: none" })
            </div>

        </div>

        <div role="form">
           @using (Html.BeginForm("EditUser", "User", FormMethod.Post))
           {
                @Html.AntiForgeryToken()

                <div>
                    @if (ViewBag.Status == "1")
                    {
                        <div class="form-group has-success">
                            <label class="control-label" for="inputSuccess"><i class="fa fa-check"></i>User @ViewBag.UserCode modified sucessfully!</label>
                        </div>
                    }
                   
                    else if (ViewBag.Status == "3")
                    {
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"><i class="fa fa-times-circle-o"></i> Can not modify user @ViewBag.UserCode ! </label>
                        </div>
                    }
                </div>

                <div class="box-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1">User Code</label>
                        @Html.TextBoxFor(model => model.UserCode, new { @class = "form-control", MaxLength = 8, Placeholder = "Code", Style = "width:20%",@readonly=true })
                        @Html.ValidationMessageFor(model => model.UserCode, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Username</label>
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", Placeholder = "Username", Style = "width:50%", MaxLength = 10 })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Full Name</label>
                        @Html.TextBoxFor(model => model.UserFullName, new { @class = "form-control", Placeholder = "Full Name", Style = "width:50%", MaxLength = 100 })
                        @Html.ValidationMessageFor(model => model.UserFullName, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">User Group</label>
                        <select class="form-control" style="width:50%" name="UserGroupID" id="UserGroupID"></select>
                        @Html.ValidationMessageFor(model => model.UserGroupID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Password</label>
                        @Html.TextBoxFor(model => model.UserPassword, new { @class = "form-control", Placeholder = "Password", Style = "width:50%", type = "password", MaxLength = 15 })
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Confirm Password</label>
                        @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", Placeholder = "ConfirmPassword", Style = "width:50%", type = "password", MaxLength = 15 })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Tel 01</label>
                        @Html.TextBoxFor(model => model.UserPhone01, new { @class = "form-control", Placeholder = "Tel 01", Style = "width:50%", MaxLength = 13 })
                        @Html.ValidationMessageFor(model => model.UserPhone01, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Tel 02</label>
                        @Html.TextBoxFor(model => model.UserPhone02, new { @class = "form-control", Placeholder = "Tel 02", Style = "width:50%", MaxLength = 13 })
                        @Html.ValidationMessageFor(model => model.UserPhone02, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Email</label>
                        @Html.TextBoxFor(model => model.UserEmail, new { @class = "form-control", Placeholder = "Tel 02", Style = "width:50%", type = "email", MaxLength = 50 })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })


                    </div>
                    <div class="checkbox">

                        <label class="col-md-1">Is Active</label>
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.UserStatus, new { @class = "flat", @checked = true })

                        </div>


                    </div>
                </div>
            <!-- /.box-body -->

                <div class="box-footer">
                    <div class="actionBar">

                        <div class="btn btn-primary pl_add btn-small pull-left">
                            @Html.ActionLink("New User", "CreateUser", null, new { @style = "font-size: 12px;color:white;font-family:'Lucida Sans Unicode', 'Lucida Grande', Sans-Serif;text-decoration: none" })
                        </div>
                        <button type="submit" class="btn btn-success">Modify</button>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>

<script>

    $.getJSON("@Url.Action("GetUserGroupListJsonResult", "User")", function (data)
    {

        var userGroupDropDown = $("#UserGroupID");

        userGroupDropDown.empty();
        userGroupDropDown.append("<option value='0'>-- Select User Group --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            userGroupDropDown.append($('<option />', { value: optionaldata.UserGroupId }).html(optionaldata.UserGroupName));
        });

        if ('@ViewBag.UserGroupID') {
            $('#UserGroupID').val(@ViewBag.UserGroupID).trigger("change");
        } else {
            $('#UserGroupID').val(0).trigger("change");
        }


    });

</script>