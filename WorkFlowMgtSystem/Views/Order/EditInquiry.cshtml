@model WorkFlowMgtSystem.Models.Inquiry
@{
    ViewBag.Title = "Edit Inquiry";
    //Model.InquiryID = ViewBag.InquiryID;
}



<div class="col-md-12">
    <!-- general form elements -->
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Create Inquiry</h3>
            <div class="btn btn-info pl_add btn-small pull-right">
                @Html.ActionLink("View All Customers", "ViewAllCustomers", null, new { @style = "font-size: 12px;color:white;font-family: 'Lucida Sans Unicode', 'Lucida Grande', Sans-Serif;text-decoration: none" })
            </div>

        </div>

        <div role="form">
            @using (Html.BeginForm("EditInquiry", "Inquiry", FormMethod.Post,new { id = ViewBag.InquiryID }))
            {
                //Model.InquiryID = ViewBag.InquiryID;
                @Html.AntiForgeryToken()

                <div>
                    @if (ViewBag.Status == "1")
                    {
                        <div class="form-group has-success">
                            <label class="control-label" for="inputSuccess"><i class="fa fa-check"></i>Inquiry @ViewBag.Customer Created sucessfully!</label>
                        </div>
                    }
                    else if (ViewBag.Status == "2")
                    {
                        <div class="form-group has-warning">
                            <label class="control-label" for="inputWarning"> <i class="fa fa-bell-o"></i> Inquiry @ViewBag.Customer already exists! </label>
                        </div>
                    }
                    else if (ViewBag.Status == "3")
                    {
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"><i class="fa fa-times-circle-o"></i> Can not create Inquiry @ViewBag.Customer ! </label>
                        </div>
                    }
                </div>

               
                //================
                <div class="box-body">

                    <div class="form-group">
                        <label for="exampleInputEmail1">Inquiry Id</label>
                        @Html.TextBoxFor(model => model.InquiryID, new { @class = "form-control", MaxLength = 8, Placeholder = "Code", Style = "width:20%", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.OrderID, "", new { @class = "text-danger" })

                    </div>
                    
                    <div class="form-group">
                        <label for="exampleInputEmail1">Order Id</label>
                        @Html.TextBoxFor(model => model.Order.OrderID, new { @class = "form-control", MaxLength = 8, Placeholder = "Code", Style = "width:20%", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.OrderID, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Order Code</label>
                        @Html.TextBoxFor(model => model.Order.OrderCode, new { @class = "form-control", MaxLength = 8, Placeholder = "Code", Style = "width:20%", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.OrderCode, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="PresentInquiryStatus" class = "text-danger">Present Inquiry Status : @ViewBag.PresentInquiryStatus</label>
                      
                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Inquiry Status</label>
                        <select class="form-control" style="width:50%" name="InquiryStatusID" id="InquiryStatusID"></select>
                        @Html.ValidationMessageFor(model => model.InquiryStatusID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Reference Person</label>
                        <select class="form-control" style="width:50%" name="HandledBy" id="HandledBy"></select>
                        @Html.ValidationMessageFor(model => model.HandledBy, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Allocate Date</label>
                        @Html.TextBoxFor(model => model.AllocatedDate, new { @class = "form-control", Placeholder = "Allocated  Date", Style = "width:20%", type = "date" , @readonly = true, @Value = Model.AllocatedDate.ToString("yyyy-MM-dd") })
                        @Html.ValidationMessageFor(model => model.AllocatedDate, "", new { @class = "text-danger" })
           
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Telephone</label>
                        @Html.TextBoxFor(model => model.Telephone, new { @class = "form-control", Placeholder = "Mobile", Style = "width:50%"  })
                        @Html.ValidationMessageFor(model => model.Telephone , "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Remark</label>
                        @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", Placeholder = "Remark", Style = "width:50%" })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })


                    </div>
                    <div class="form-group">
                        <label for="exampleNextInqDate">Next Inq Date</label>
                        @Html.TextBoxFor(model => model.NextInqDate, new { @class = "form-control", Placeholder = "NextInqDate", Style = "width:50%", type = "date", @Value = Model.AllocatedDate.ToString("yyyy-MM-dd") })
                        @Html.ValidationMessageFor(model => model.NextInqDate, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        <label for="AddedDate">Add Date</label>
                        @Html.TextBoxFor(model => model.AddedDate, new { @class = "form-control", Placeholder = "Allocated  Date", Style = "width:20%", type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd") })
                        @Html.ValidationMessageFor(model => model.AddedDate, "", new { @class = "text-danger" })

                    </div>

                    <div class="box-footer">
                        <div class="actionBar">

                            <div class="btn btn-primary pl_add btn-small pull-left">
                                @Html.ActionLink("Clear", "CreateCustomer", null, new { @style = "font-size: 12px;color:white;font-family:'Lucida Sans Unicode', 'Lucida Grande', Sans-Serif;text-decoration: none" })
                            </div>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </div>
                    </div>                    <br />
                    <br />
                    <h1>
                        <label for="exampleInputEmail1" class="alert-success">
                            Order Details
                        </label>
                    </h1>
                    <div class="form-group">

                        <label for="exampleInputEmail1" >Order Code</label>
                        @Html.TextBoxFor(model => model.Order.OrderCode, new { @class = "form-control", Placeholder = "Order Code", Style = "width:20%", type = "text", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.OrderCode, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Order Date :  @ViewBag.RegisteredDate</label>
                        @*@Html.TextBoxFor(model => model.Order.RegisteredDate, new { @class = "form-control", Placeholder = "Order Date", Style = "width:20%", type = "date", @Value = @ViewBag.RegisteredDate.ToString("yyyy-MM-dd")})
                        @Html.ValidationMessageFor(model => model.Order.RegisteredDate, "", new { @class = "text-danger" })*@


                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Order</label>
                        @Html.TextAreaFor(model => model.Order.OrderName, new { @class = "form-control", Placeholder = "Order", Style = "width:50%", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.OrderName, "", new { @class = "text-danger" })


                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Reference Person</label>
                        <select class="form-control" style="width:50%" name="ReferenceUserID" id="ReferenceUserID"></select>
                        @Html.ValidationMessageFor(model => model.Order.ReferenceUserID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="exampleInputEmail1">Remark</label>
                        @Html.TextAreaFor(model => model.Order.Remark, new { @class = "form-control", Placeholder = "Remark", Style = "width:50%", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Order.Remark, "", new { @class = "text-danger" })


                    </div>

                </div>
                //===========

                <div class="box-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1" class="alert-danger">Customer Details</label>
                    </div>
                        <div class="form-group">

                            <label for="exampleInputEmail1">Customer Code</label>
                            @*@Html.DisplayForModel(Model)*@
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerCode, new { @class = "form-control", MaxLength = 8, Placeholder = "Code", Style = "width:20%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerCode, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Title</label>
                            <select id="CustomerTitle" name="CustomerTitle" Style="width:20%" class="form-control , readonly = " true">
                                <option value="Mr">Mr.</option>
                                <option value="Mrs">Mrs.</option>
                                <option value="Miss">Miss.</option>
                                <option value="Dr">Dr.</option>
                                <option value="Prof">Prof.</option>
                                <option value="Rev">Rev.</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerTitle, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Full Name</label>
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerName, new { @class = "form-control", Placeholder = "Full Name", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerName, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Address</label>
                            @Html.TextAreaFor(model => model.Order.Customer.CustomerAddress, new { @class = "form-control", Placeholder = "Address", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerAddress, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Mobile</label>
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerMobile, new { @class = "form-control", Placeholder = "Mobile", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerMobile, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Tel 01</label>
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerTelephone01, new { @class = "form-control", Placeholder = "Tel 01", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerTelephone01, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Tel 02</label>
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerTelephone02, new { @class = "form-control", Placeholder = "Tel 02", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerTelephone02, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Email</label>
                            @Html.TextBoxFor(model => model.Order.Customer.CustomerEmail, new { @class = "form-control", Placeholder = "Customer Email", Style = "width:50%", type = "email", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerEmail, "", new { @class = "text-danger" })


                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Customer Origin</label>
                            <select class="form-control" style="width:50%" name="CustomerOrigin" id="CustomerOrigin"></select>
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerOrigin, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Customer Group</label>
                            <select class="form-control" style="width:50%" name="CustomerGroupID" id="CustomerGroupID"></select>
                            @Html.ValidationMessageFor(model => model.Order.Customer.CustomerGroupID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Remark</label>
                            @Html.TextAreaFor(model => model.Order.Customer.Remark, new { @class = "form-control", Placeholder = "Remark", Style = "width:50%", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Order.Customer.Remark, "", new { @class = "text-danger" })
                        </div>


                        <br />
                        <br />


                    </div>
            <!-- /.box-body -->

                <div class="box-footer">
                    <div class="actionBar">

                        <div class="btn btn-primary pl_add btn-small pull-left">
                            @Html.ActionLink("Clear", "CreateCustomer", null, new { @style = "font-size: 12px;color:white;font-family:'Lucida Sans Unicode', 'Lucida Grande', Sans-Serif;text-decoration: none" })
                        </div>
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>


<script>

    $.getJSON("@Url.Action("GetCustomerGroups", "Customer")", function (data) {

        var DropDown = $("#CustomerGroupID");

        DropDown.empty();
        DropDown.append("<option value='0'>-- Select Customer Group --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            DropDown.append($('<option />', { value: optionaldata.UserGroupId }).html(optionaldata.UserGroupName));
        });

        if ('@ViewBag.CustomerGroupID') {
            $('#CustomerGroupID').val(@ViewBag.CustomerGroupID).trigger("change");
        } else {
            $('#CustomerGroupID').val(0).trigger("change");
        }


    });

</script>



<script>

    $.getJSON("@Url.Action("GetUsers", "User")", function (data) {

        var DropDown = $("#HandledBy");

        DropDown.empty();
        DropDown.append("<option value='0'>-- Reference Person --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            DropDown.append($('<option />', { value: optionaldata.UserGroupId }).html(optionaldata.UserGroupName));
        });

        if ('@ViewBag.HandledBy') {
            $('#HandledBy').val(@ViewBag.HandledBy).trigger("change");
        } else {
            $('#HandledBy').val(0).trigger("change");
        }


    });

</script>

<script>

    $.getJSON("@Url.Action("GetUsers", "User")", function (data) {

        var DropDown = $("#ReferenceUserID");

        DropDown.empty();
        DropDown.append("<option value='0'>-- Select User --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            DropDown.append($('<option />', { value: optionaldata.UserGroupId }).html(optionaldata.UserGroupName));
        });

        if ('@ViewBag.ReferenceUserID') {
            $('#ReferenceUserID').val(@ViewBag.ReferenceUserID).trigger("change");
        } else {
            $('#ReferenceUserID').val(0).trigger("change");
        }


    });

</script>

<script>

    $.getJSON("@Url.Action("GetLocations", "Customer")", function (data) {

        var DropDown = $("#CustomerOrigin");

        DropDown.empty();
        DropDown.append("<option value='0'>-- Select Customer Origine --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            DropDown.append($('<option />', { value: optionaldata.UserGroupId }).html(optionaldata.UserGroupName));
        });

        if ('@ViewBag.CustomerOrigin') {
            $('#CustomerOrigin').val(@ViewBag.CustomerOrigin).trigger("change");
        } else {
            $('#CustomerOrigin').val(0).trigger("change");
        }


    });

</script>


<script>

    $.getJSON("@Url.Action("GetInquiryStatus", "InquiryStatus")", function (data) {

        var DropDown = $("#InquiryStatusID");

        DropDown.empty();
        DropDown.append("<option value='0'>-- Select Inquiry Status --</option>");

        $.each(JSON.parse(data), function (index, optionaldata) {
            DropDown.append($('<option />', { value: optionaldata.InquiryStstusID }).html(optionaldata.InquiryName));
        });

        if ('@ViewBag.InquiryStatusID') {
            $('#InquiryStatusID').val(@ViewBag.InquiryStatusID).trigger("change");
        } else {
            $('#InquiryStatusID').val(0).trigger("change");
        }


    });

</script>

<script>

    document.getElementById("HandledBy").selectedIndex = @ViewBag.HandledBy;

</script>